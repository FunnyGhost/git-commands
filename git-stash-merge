#!/bin/bash

# Applies stash on top of local changes - triggers a merge
# and allows you to resolve any conflicts.

set -e

# unstage everything
git reset

REV=${1:-stash@{0}}

# save pointer to top stash
STASH1=$(git rev-parse $REV)

if [[ -z "$STASH1" ]]; then
  echo "Stash ref $STASH1 not found."
fi

if git diff-files --quiet; then
    echo "You don't have any tracked changes. Try git stash apply / pop."
    exit 1
fi

# stash current changes
git stash save "git-stash-merge $(date '+%Y-%m-%d% %H:%M:%S')"

# save pointer to new top stash
STASH2=$(git rev-parse stash@{0})

git merge --no-commit $STASH1 $STASH2

git stash drop
git reset # git merge stages changes by default
